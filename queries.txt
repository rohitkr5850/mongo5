 mongosh
Current Mongosh Log ID: 67ebd559df6d2747966b140a
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.4.2
Using MongoDB:          7.0.18
Using Mongosh:          2.4.2

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-04-01T01:30:10.020+05:30: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2025-04-01T01:30:10.604+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2025-04-01T01:30:10.604+05:30: vm.max_map_count is too low
------

test> use ecommerce;
... db.createCollection("orders");
... 
switched to db ecommerce;
ecommerce;> db.orders.insertMany([
...   {
...     "order_id": 1,
...     "customer_name": "John Doe",
...     "items": ["Laptop", "Mouse"],
...     "total_amount": 65000,
...     "order_status": "pending"
...   },
...   {
...     "order_id": 2,
...     "customer_name": "Jane Smith",
...     "items": ["Headphones", "Charger"],
...     "total_amount": 3000,
...     "order_status": "shipped"
...   },
...   {
...     "order_id": 3,
...     "customer_name": "Alice Johnson",
...     "items": ["Mobile Phone"],
...     "total_amount": 20000,
...     "order_status": "delivered"
...   },
...   {
...     "order_id": 4,
...     "customer_name": "Bob Brown",
...     "items": ["Tablet", "Keyboard"],
...     "total_amount": 15000,
...     "order_status": "pending"
...   },
...   {
...     "order_id": 5,
...     "customer_name": "Chris Green",
...     "items": ["Smartwatch"],
...     "total_amount": 7000,
...     "order_status": "shipped"
...   }
... ]);
... 
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('67ebd588df6d2747966b140b'),
    '1': ObjectId('67ebd588df6d2747966b140c'),
    '2': ObjectId('67ebd588df6d2747966b140d'),
    '3': ObjectId('67ebd588df6d2747966b140e'),
    '4': ObjectId('67ebd588df6d2747966b140f')
  }
}
ecommerce;> db.orders.find({ order_status: "shipped" }).pretty();
... 
[
  {
    _id: ObjectId('67ebd588df6d2747966b140c'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'shipped'
  },
  {
    _id: ObjectId('67ebd588df6d2747966b140f'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
ecommerce;> db.orders.updateOne({ order_id: 1 }, { $set: { total_amoutotal_amount: 70000 } });
... 
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
ecommerce;> db.orders.deleteOne({ order_id: 4 });
... 
{ acknowledged: true, deletedCount: 1 }
ecommerce;> db.orders.find({ customer_name: "Alice Johnson" }).pretty();
... 
[
  {
    _id: ObjectId('67ebd588df6d2747966b140d'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  }
]
ecommerce;> db.orders.updateOne({ order_id: 2 }, { $set: { order_statorder_status: "delivered" } });
... 
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
ecommerce;> db.orders.find({ total_amount: { $gte: 15000 } }).pretty();
... 
[
  {
    _id: ObjectId('67ebd588df6d2747966b140b'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('67ebd588df6d2747966b140d'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  }
   ]
    ecommerce;> db.orders.find().pretty();
... 
[
  {
    _id: ObjectId('67ebd588df6d2747966b140b'),
    order_id: 1,
    customer_name: 'John Doe',
    items: [ 'Laptop', 'Mouse' ],
    total_amount: 70000,
    order_status: 'pending'
  },
  {
    _id: ObjectId('67ebd588df6d2747966b140c'),
    order_id: 2,
    customer_name: 'Jane Smith',
    items: [ 'Headphones', 'Charger' ],
    total_amount: 3000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('67ebd588df6d2747966b140d'),
    order_id: 3,
    customer_name: 'Alice Johnson',
    items: [ 'Mobile Phone' ],
    total_amount: 20000,
    order_status: 'delivered'
  },
  {
    _id: ObjectId('67ebd588df6d2747966b140f'),
    order_id: 5,
    customer_name: 'Chris Green',
    items: [ 'Smartwatch' ],
    total_amount: 7000,
    order_status: 'shipped'
  }
]
ecommerce;> nano queries.txt
... 
Uncaught:
SyntaxError: Missing semicolon. (1:4)

> 1 | nano queries.txt
    |     ^
  2 |
  3 |

ecommerce;> 

ecommerce;> 1. Retrieve all orders with the order_status "shipped"
... db.orders.find({ order_status: "shipped" }).pretty();
... 
... 2. Update the total_amount of the order with order_id: 1 to 70000 
... db.orders.updateOne({ order_id: 1 }, { $set: { total_amount: 70000 } });
... 
... 3. Delete the order with order_id: 4
... db.orders.deleteOne({ order_id: 4 });
... 
... 4. Retrieve the order with the customer_name: "Alice Johnson"
... db.orders.find({ customer_name: "Alice Johnson" }).pretty();
... 
... 5. Update the order_status of the order with order_id: 2 to "delivered"
... db.orders.updateOne({ order_id: 2 }, { $set: { order_status: "delivered" } });
... 
... 6. Retrieve all orders with a total_amount greater than or equal to 15000
... db.orders.find({ total_amount: { $gte: 15000 } }).pretty();
... 
Uncaught:
SyntaxError: Missing semicolon. (1:2)

> 1 | 1. Retrieve all orders with the order_status "shipped"
    |   ^
  2 | db.orders.find({ order_status: "shipped" }).pretty();
  3 |
  4 | 2. Update the total_amount of the order with order_id: 1 to 70000
